// handleAddPlace.jsx [frontend]
import Swal from "sweetalert2";

const handleAddPlace = async (place, navigate, setPlaces) => {
  try {
    // üîê ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á ‡πÇ‡∏î‡∏¢‡πÄ‡∏ä‡πá‡∏Ñ token
    const response = await fetch("http://localhost:5000/api/get-cookie", {
      method: "GET",
      credentials: "include",
    });

    if (!response.ok) {
      navigate("/login");
      return;
    }

    const data = await response.json();

    if (!data.token) {
      navigate("/login");
      return;
    }

    const token = data.token;
    const userId = data.user_id;

    // ‚úÖ ‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏á login ‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô
    const result = await Swal.fire({
      title: "‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πâ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?",
      text: `${place.name} ‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÉ‡∏ô List to go ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì`,
      icon: "question",
      showCancelButton: true,
      confirmButtonText: "‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏•‡∏¢!",
      cancelButtonText: "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å",
      confirmButtonColor: "#3085d6",
      cancelButtonColor: "#d33",
    });

    if (!result.isConfirmed) return;

    // üöÄ ‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏°
    const addPlaceResponse = await fetch("http://localhost:5000/api/list-to-go/add", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        Authorization: `Bearer ${token}`,
      },
      body: JSON.stringify({
        user_id: userId,
        name: place.name,
      }),
    });

    // ‚ö†Ô∏è ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏£‡∏ì‡∏µ‡∏ã‡πâ‡∏≥
    if (addPlaceResponse.status === 409) {
      await Swal.fire({
        title: "‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß!",
        text: `${place.name} ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô List to go ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏•‡πâ‡∏ß`,
        icon: "info",
      });
      return;
    }

    // ‚ùå ‡∏Å‡∏£‡∏ì‡∏µ‡∏≠‡∏∑‡πà‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
    if (!addPlaceResponse.ok) {
      throw new Error("Failed to add place");
    }

    const newPlace = await addPlaceResponse.json();

    // ‚úÖ ‡πÅ‡∏à‡πâ‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏´‡∏•‡∏±‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏™‡∏£‡πá‡∏à
    await Swal.fire({
      title: "‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢!",
      text: `${place.name} ‡∏ñ‡∏π‡∏Å‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÉ‡∏ô List to go ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏•‡πâ‡∏ß`,
      icon: "success",
    });

    // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï state ‡∏ñ‡πâ‡∏≤‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô
    // setPlaces?.((prev) => [...prev, newPlace]);

  } catch (error) {
    console.error("Error adding place:", error);
    // ‚ùó ‡πÅ‡∏™‡∏î‡∏á error ‡∏ñ‡πâ‡∏≤ token ‡πÉ‡∏ä‡πâ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏´‡∏£‡∏∑‡∏≠ fetch fail
    await Swal.fire({
      title: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î",
      text: "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏´‡∏£‡∏∑‡∏≠‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á",
      icon: "error",
    });

    navigate("/login");
  }
};

export default handleAddPlace;



  