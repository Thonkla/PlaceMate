generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model business_hour {
  business_hour_id Int       @id @default(autoincrement())
  place_id         String    @db.VarChar(255)
  business_hour    String?   @db.VarChar(100)
  created_at       DateTime? @default(now()) @db.Timestamp(6)
  updated_at       DateTime? @default(now()) @db.Timestamp(6)
  day              String?   @db.VarChar(10)
  place            place     @relation(fields: [place_id], references: [place_id], onDelete: NoAction, onUpdate: NoAction)
}

model list_to_go {
  list_to_go_id Int       @id @default(autoincrement())
  user_id       Int
  place_id      String    @db.VarChar(255)
  created_at    DateTime? @default(now()) @db.Timestamp(6)
  updated_at    DateTime? @default(now()) @db.Timestamp(6)
  place         place     @relation(fields: [place_id], references: [place_id], onDelete: NoAction, onUpdate: NoAction)
  user          user      @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction)
}

model place {
  id              Int             @id @default(autoincrement())
  place_id        String?         @unique @db.VarChar(255)
  name            String          @db.VarChar(500)
  description     String?
  category        String?         @db.VarChar(255)
  lat             String?         @db.VarChar(255)
  lng             String?         @db.VarChar(255)
  rating          String?         @db.VarChar(50)
  photo           String?         @db.VarChar(255)
  price_level     String?         @db.VarChar(255)
  website_uri     String?
  address         String?
  business_status String?         @db.VarChar(255)
  created_at      DateTime?       @default(now()) @db.Timestamp(6)
  updated_at      DateTime?       @default(now()) @db.Timestamp(6)
  business_hour   business_hour[]
  list_to_go      list_to_go[]
  place_list      place_list[]
  review          review[]
  tag             tag[]
}

model place_list {
  place_list_id Int       @id @default(autoincrement())
  plan_id       Int
  place_id      String    @db.VarChar(255)
  start_time    DateTime? @db.Timestamp(6)
  end_time      DateTime? @db.Timestamp(6)
  created_at    DateTime? @default(now()) @db.Timestamp(6)
  updated_at    DateTime? @default(now()) @db.Timestamp(6)
  place         place     @relation(fields: [place_id], references: [place_id], onDelete: NoAction, onUpdate: NoAction)
  plan          plan      @relation(fields: [plan_id], references: [plan_id], onDelete: NoAction, onUpdate: NoAction)
}

model plan {
  plan_id    Int          @id @default(autoincrement())
  user_id    Int
  title      String?      @db.VarChar(255)
  start_time DateTime?    @db.Timestamp(6)
  end_time   DateTime?    @db.Timestamp(6)
  created_at DateTime?    @default(now()) @db.Timestamp(6)
  updated_at DateTime?    @default(now()) @db.Timestamp(6)
  place_list place_list[]
  user       user         @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction)
}

model preference {
  preference_id Int       @id @default(autoincrement())
  user_id       Int
  preference    String?   @db.VarChar(255)
  created_at    DateTime? @default(now()) @db.Timestamp(6)
  updated_at    DateTime? @default(now()) @db.Timestamp(6)
  user          user      @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction)
}

model review {
  review_id  Int       @id @default(autoincrement())
  user_id    Int
  place_id   String    @db.VarChar(255)
  rating     Int?
  comment    String?   @db.VarChar(1000)
  created_at DateTime? @default(now()) @db.Timestamp(6)
  updated_at DateTime? @default(now()) @db.Timestamp(6)
  place      place     @relation(fields: [place_id], references: [place_id], onDelete: NoAction, onUpdate: NoAction)
  user       user      @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction)
}

model tag {
  tag_id      Int       @id @default(autoincrement())
  place_id    String    @db.VarChar(255)
  tag_name    String?   @db.VarChar(255)
  description String?   @db.VarChar(255)
  created_at  DateTime? @default(now()) @db.Timestamp(6)
  updated_at  DateTime? @default(now()) @db.Timestamp(6)
  place       place     @relation(fields: [place_id], references: [place_id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  user_id    Int          @id @default(autoincrement())
  username   String       @db.VarChar(255)
  password   String       @db.VarChar(255)
  email      String?      @db.VarChar(255)
  created_at DateTime?    @default(now()) @db.Timestamp(6)
  updated_at DateTime?    @default(now()) @db.Timestamp(6)
  list_to_go list_to_go[]
  plan       plan[]
  preference preference[]
  review     review[]
}
